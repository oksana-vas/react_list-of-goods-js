{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodList/Goodlist.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","id","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"mPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKI,UCCzBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BZ,EAA1B,GAA6D,IAA1BQ,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCG,EAAa,YAAOb,GAqB1B,OAnBIQ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAOcO,CAAiBjB,EAAiB,CACrDK,YACAE,eAQF,OACE,mCACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAA0B,aAAdhB,IAJhB,iCAUA,wBACEc,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,QAAS,WAELX,GADED,IAMNa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAfd,IAVhB,sBAgBEF,GAAaE,IACb,wBACEY,QA/CK,WACfb,EAAa,IACbE,GAAc,IA8CJY,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAUrB,MAAOY,UC7GzBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8221f434.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { GoodCard } from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good.id} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\nimport { GoodList } from './components/GoodList/Goodlist';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  const setReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n            type=\"button\"\n            className={cn('button is-info', {\n              'is-light': sortField !== 'alphabet',\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={() => setSortField(SORT_FIELD_LENGTH)}\n            type=\"button\"\n            className={cn('button is-success', {\n              'is-light': sortField !== SORT_FIELD_LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={() => {\n              if (isReversed) {\n                setIsReversed(false);\n              } else {\n                setIsReversed(true);\n              }\n            }}\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': isReversed === false,\n            })}\n          >\n            Reverse\n          </button>\n\n          {(sortField || isReversed) && (\n            <button\n              onClick={setReset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={visibleGoods} />\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}